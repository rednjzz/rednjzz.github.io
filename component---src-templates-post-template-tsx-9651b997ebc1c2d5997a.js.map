{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/components/utterances.tsx","webpack:///./src/templates/PostTemplate.tsx"],"names":["$export","$entries","S","entries","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","key","O","keys","length","i","result","call","push","Utterances","React","memo","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","forEach","value","setAttribute","current","appendChild","ref","displayName","PostTemplate","props","pageContext","title","date","html","dangerouslySetInnerHTML","__html"],"mappings":"gFACA,IAAIA,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BC,QAAS,SAAiBC,GACxB,OAAOH,EAASG,O,qBCNpB,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUR,GAOf,IANA,IAKIS,EALAC,EAAIP,EAAUH,GACdW,EAAOT,EAAQQ,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdJ,EAAME,EAAKE,KACNZ,IAAeG,EAAOW,KAAKL,EAAGD,IACjCK,EAAOE,KAAKR,EAAY,CAACC,EAAKC,EAAED,IAAQC,EAAED,IAG9C,OAAOK,K,gFCVLG,G,wCAAyCC,IAAMC,MAAK,YAAc,IAAXC,EAAW,EAAXA,KACnDC,EAAeC,sBAsBrB,OApBAC,2BAAgB,WACZ,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACfC,IAbA,gCAcAR,OACA,aAAc,WACdS,MAAO,UACPC,MAAO,eACPC,YAAa,YACbC,MAAO,QAGXC,OAAOlC,QAAQ4B,GAAYO,SAAQ,YAAkB,IAAhBzB,EAAgB,KAAX0B,EAAW,KACjDX,EAAWY,aAAa3B,EAAK0B,MAGjCd,EAAagB,QAAQC,YAAYd,KAClC,CAACJ,IAEG,yBAAKmB,IAAKlB,QAGrBJ,EAAWuB,YAAc,aAEVvB,QCzBTwB,EAA6CvB,IAAMC,MAAK,SAAAuB,GAAS,MACvCA,EAAMC,YAA5BC,EAD6D,EAC7DA,MAAOC,EADsD,EACtDA,KAAMC,EADgD,EAChDA,KACrB,OACI,kBAAC,IAAD,KACI,4BAAKF,GACL,4BAAKC,GACL,6BACA,yBAAKE,wBAAyB,CAAEC,OAAQF,KACxC,kBAAC,EAAD,CAAY1B,KAAK,qBAM3BqB,EAAaD,YAAc,eAEZC","file":"component---src-templates-post-template-tsx-9651b997ebc1c2d5997a.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","import React, { createRef, useLayoutEffect } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\n\nexport interface IUtterancesProps {\n    repo: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo }) => {\n    const containerRef = createRef<HTMLDivElement>();\n\n    useLayoutEffect(() => {\n        const utterances = document.createElement('script');\n\n        const attributes = {\n            src,\n            repo,\n            'issue-term': 'pathname',\n            label: 'comment',\n            theme: 'github-light',\n            crossOrigin: 'anonymous',\n            async: 'true',\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value);\n        });\n\n        containerRef.current.appendChild(utterances);\n    }, [repo]);\n\n    return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;","import React from 'react';\nimport Layout from '../components/layout';\nimport { ITemplateProps } from '../interface';\nimport Utterances from '../components/utterances';\n\ntype IPostTemplateProps = ITemplateProps<{\n  html: string;\n  title: string;\n  date: Date;\n}>;\n\nconst PostTemplate: React.FC<IPostTemplateProps> = React.memo(props => {\n  const { title, date, html } = props.pageContext;\n  return (\n      <Layout>\n          <h2>{title}</h2>\n          <h4>{date}</h4>\n          <hr />\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n          <Utterances repo=\"rednjzz/blog\" />\n \n      </Layout>\n  );\n});\n\nPostTemplate.displayName = 'PostTemplate';\n\nexport default PostTemplate;"],"sourceRoot":""}